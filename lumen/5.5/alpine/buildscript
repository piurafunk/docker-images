#!/bin/ash

print() {
	if [ "$VERBOSE" == "TRUE" ]; then
		read VAR
		while [ "$VAR" ]; do
			echo $VAR
			read VAR
		done
	fi
}

cd

#Add binaries here to have them displayed and installed
set -- git freetds-dev openssh nodejs libcap
binariesToInstall=""

echo -n " ---> Installing binaries ("
while [ -n "$1" ]; do
	echo -n "$1"
	binariesToInstall="$binariesToInstall $1"
	shift
	if [ -n "$1" ]; then
		echo -n ", ";
	fi
done
echo ")..."
#echo http://dl-2.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories
apk add $binariesToInstall --no-cache 2>&1 | print

#Add php extensions here
set -- pdo_mysql pdo_dblib
extensionsToInstall=""

echo -n " ---> Installing "
while [ -n "$1" ]; do
	echo -n "$1"
	extensionsToInstall="$extensionsToInstall $1"
	shift
	if [ -n "$1" ]; then
		echo -n ", "
	fi
done
echo "..."

set -- $extensionsToInstall
while [ -n "$1" ]; do
	docker-php-ext-configure $1
	docker-php-ext-install $1
	docker-php-ext-enable $1
	shift
done

echo " ---> Installing composer..."
EXPECTED_SIGNATURE=$(curl https://composer.github.io/installer.sig -s) 2>&1  | print
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" 2>&1 | print
ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');") 2>&1 | print

if [ "$EXPECTED_SIGNATURE" = "$ACTUAL_SIGNATURE" ]
then
    php composer-setup.php --install-dir=/usr/bin --filename=composer > /dev/null
    rm -f composer-setup.php 2>&1 | print
else
    >&2 echo ' ---> ERROR: Invalid installer signature'
    exit 1
fi

echo " ---> Installing laravel-echo-server..."
npm install laravel-echo-server -g 2>&1 | print

echo " ---> Allowing PHP to bind to port 80..."
setcap 'cap_net_bind_service=+ep' $(which php) 2>&1 | print

echo " ---> Removing user 'www-data' and adding user 'laravel'..."
deluser --remove-home www-data
adduser -Du ${UID} laravel
mkdir -p /home/laravel/.ssh
echo -e "Host *\n\tStrictHostKeyChecking no\n\tUserKnownHostsFile=/dev/null" >> /home/laravel/.ssh/config
chown laravel: /home/laravel -R
